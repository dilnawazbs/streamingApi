#spring.profiles.active = ${active.profile:dev}

#spring.application.name = consumer-stream

spring.data.mongodb.host= localhost
spring.data.mongodb.port= 27017
spring.data.mongodb.database= iot

spring.cloud.stream.function.definition= iotdata
spring.cloud.stream.bindings.iotdata-in-0.destination= iot-data
spring.cloud.stream.kafka.streams.binder.functions.iotdata.applicationId= iotdata


spring.cloud.stream.kafka.binder.brokers= localhost:9092, localhost:9094,  localhost:9095
spring.cloud.stream.kafka.binder.consumer-properties.client.id= consumer-stream

spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers= false
spring.kafka.consumer.properties.spring.json.trusted.packages= *

# server.port=8083
logging.level.root= INFO
logging.level.com.iot.relay.consumer= INFO
logging.level.org.springframework.data.mongodb.core.MongoTemplate= INFO
logging.pattern.console= '%highlight(<<%-5level>>) %d{dd-MM-yy HH:mm:ss.SSS} [%thread] %cyan(%c{0}.%M) - %msg%n'


#spring:
#   kafka:
#     consumer:
#        bootstrap-servers: localhost:9092
#        group-id: group_id
#        auto-offset-reset: earliest
#        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer